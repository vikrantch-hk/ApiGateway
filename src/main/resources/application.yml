spring:
  application:
    name: gateway-service
  cache:
    cache-names: appConfig
    caffeine:
      spec: expireAfterWrite=180s
eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      default-zone: http://localhost:8761/eureka/
  instance:
    leaseRenewalIntervalInSeconds: 1
    leaseExpirationDurationInSeconds: 2
    preferIpAddress: true
eureka.server.enable-self-preservation: false
management:
  endpoint:
    health:
      enabled: true
server.port: 8761
feign.hystrix.enabled: true
hystrix.command.default.fallback.enabled: true
hystrix.command.default.circuitBreaker.enabled: true
third:
  party:
    api:
      access:
        user:
          name: api
        password: api
zuul: 
  #ignoredServices: '*'
  routes:
    first-service: 
      path: /first-service/**
      service-id: first-service
      strip-prefix: true
    hkSecurity: 
      path: /hkSecurity/**
      service-id: hkSecurity
      strip-prefix: false
hystrix:
  command:
    security-service:
      execution:
        timeout:
          enabled: false
        isolation:
          thread:
            timeoutInMilliseconds: 5000
      
# ===============================
# = DATA SOURCE
# ===============================

# Set here configurations for the database connection

# Connection url for the database "netgloo_blog"
spring.datasource.url : jdbc:mysql://192.168.70.134:3306/hk_cat

# Username and password
spring.datasource.username : hkadmin
spring.datasource.password : admin2K11!

# Keep the connection alive if idle for a long time (needed in production)

# ===============================
# = JPA / HIBERNATE
# ===============================

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).
spring.jpa.properties.hibernate.current_session_context_class : org.springframework.orm.hibernate5.SpringSessionContext

# Show or not log for each sql query
spring.jpa.show-sql : false

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project

# Naming strategy

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect : org.hibernate.dialect.MySQL5InnoDBDialect
spring.jpa.properties.hibernate.connection.release_mode: on_close
spring.jpa.properties.hibernate.connection.isolation: 2
spring.jpa.properties.hibernate. bytecode.use_reflection_optimizer: true


#####################################################  environment locator #####################################################
allowedUserAgent: .*
apiApplicationId: c558bca0-e618-11e7-a018-d7ea46df960e
useHkSecurity: true
noOfImagesInRepositorySubDir: 100
imageUploads: /usr/local/projects/HealthKartWork/imageUploads
imageDistributionDomainPrefix: img
imageDistributionDomainSuffix: hkrtcdn.com
